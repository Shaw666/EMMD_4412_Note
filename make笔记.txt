target：规则的目标。通常是最后需要生成的文件名或者为了实现这个目的
而必需的中间过程文件名。可以是.o 文件、也可以是最后的可执行程序的文件名
等。另外，目标也可以是一个 make “ 执行的动作的名称，如目标 clean”，我们
“ ” 称这样的目标是 伪目标 。
prerequisites：规则的依赖。生成规则目标所需要的文件名列表。通常一个
目标依赖于一个或者多个文件。
command：规则的命令行。是规则所要执行的动作（任意的shell 命令或者
是可在 shell 下执行的程序）。它限定了make 执行这条规则时所需要的动作。
一个规则可以有多个命令行，每一条命令占一行。注意：每一个命令行必
须以[Tab]字符开始，[Tab]字符告诉 make 此行是一个命令行。make 按照
命令完成相应的动作。这也是书写 Makefile 中容易产生，而且比较隐蔽的
错误。

可以将一个较长行使用反斜线（\）来分解为多行，这样可以
使我们的Makefile书写清晰、容易阅读理解。但需要注意：反斜线之后不能有
空格（这也是大家最容易犯的错误，错误比较隐蔽）。

使用一个变
“ 量 objects” “ 、 OBJECTS” “ 、 objs” “ 、 OBJS” “ 、 obj” “ 或者 OBJ”来作为所有的.o
文件的列表的替代。在使用到这些文件列表的地方，使用此变量来代替。
需要使用这些.o “ 文件列表的地方使用 $(objects)”来表示它

这两个实现有两点不同： 1.  “ 通过 .PHONY” “ 特殊目标将 clean”目标声明
“ 为伪目标。避免当磁盘上存在一个名为 clean” “ 文件时，目标 clean”所在规则的
命令无法执行。2.  “ 在命令行之前使用 -” “ ，意思是忽略命令 rm”的执行错误。